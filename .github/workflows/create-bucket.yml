name: 'Create Bucket - Terraform'
on:
  pull_request:
    branches:
      - "*"
jobs:
  setup_dependencies: 
    name: Config Terraform
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          args: '-var="aws_access_key=${{secrets.AWS_ACCESS_KEY_ID}}" 
                 -var="aws_secret_key=${{secrets.AWS_SECRET_ACCESS_KEY}}"'

  create_bucket:
    name: Create Bucket
    needs: [setup_dependencies]
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Extract branch name
        id: extract_branch
        run: |
          echo branch_name=${GITHUB_HEAD_REF}
          echo commit_hash=$(git log --pretty=format:"%H" main..${GITHUB_HEAD_REF} --reverse | head -n1)
          echo ::set-output name=hash_name_bucket::assets-zap-$($commit_hash)


      - name: Echo name
        run: echo ${{ steps.extract_branch.outputs.hash_name_bucket }}

          # echo branch_name=$(git rev-parse --abbrev-ref HEAD)
      # - name: Terraform Init
      #   run: terraform init

      # - name: Terraform Check
      #   env:
      #     AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   run: terraform plan -input=true -var="auto_bucket_name=${{ steps.extract_branch.outputs.short_ref }}"

      # - name: Create bucket
      #   env:
      #     AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   run: terraform apply -auto-approve -input=false -var="auto_bucket_name=${{ steps.extract_branch.outputs.short_ref }}"